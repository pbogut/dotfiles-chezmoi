add_newline = false
# right_format = "$time"
format = """
${custom.time}$status$cmd_duration$all$shell
$username$hostname${custom.local_host}${custom.remote_host}$directory$git_branch$git_status$git_state$custom_time
$character\
"""

[cmd_duration]
format = '\[ﰌ [$duration]($style)\] '

[status]
format = '[$symbol$status]($style) '
disabled = false

[line_break]
disabled = true

[character]
error_symbol = '[λ](bold red)'
success_symbol = '[λ](bold red)'

[hostname]
disabled = true
ssh_only = false
format= '[$hostname]($style)[\]](bold red) '
style = 'gray'

[username]
show_always = true
format= '[\[](bold red)[$user]($style)[@](bold red)'
style_user = 'gray'

[shell]
format = '[$indicator]($style) '
style = 'white'
zsh_indicator = '' # default one
disabled = false

[directory]
format = '[\(](bold red)[$path]($style)[\)](bold red)[$read_only]($read_only_style) '
truncate_to_repo = false
truncation_symbol = "…/"

[directory.substitutions]
'~/Projects/gitlab.com/assuredpharmacy' = '~ap'
'~/Projects/github.com/pbogut' = '~pb'

[git_status]
disabled = true

[git_state]
disabled = true

[git_branch]
format = '[$symbol$branch(:$remote_branch)]($style) '
style = 'blue'

[custom.local_host]
format = '[$output]($style)[\]](bold red) '
command = 'hostname'
style = 'gray'
when = 'test -z "$SSH_TTY"'

[custom.remote_host]
format = '[$output]($style)[\]](bold red) '
command = 'hostname'
style = 'bold yellow'
when = 'test -n "$SSH_TTY"'

[custom.time]
format = '[\[$symbol$output\]]($style) '
command = 'date +"%H:%M:%S"'
style = 'green'
when = "true"

[custom.elixir]
# symbol = '💧 '
symbol = ' '
format = '[$symbol(v$output )]($style)'
command = "elixir --short-version 2>/dev/null || (elixir --version | grep '^Elixir' | awk '{print $2}')"
when = "test -f mix.exs"
style = 'bold purple'

[custom.godot]
symbol = ' '
format = '[$symbol(v$output )]($style)'
command = 'godot --version | sed -E "s/(^[0-9\.]+[0-9]).*/\1/"'
when = "test -f project.godot"
style = 'bold blue'
# symbol = ' '

[custom.docker]
# symbol = '🐳 '
symbol = '󰡨 '

style = 'bold blue'
command = '(docker-compose ls | awk "{print $3}" | grep "$(realpath $PWD)/docker-compose.yml" >/dev/null) && echo "up" || echo "down"'
when = "test -f docker-compose.yml"

# get rid of 'via ' prefix in package version info
[package]
format = '[$symbol($version )]($style)'
symbol = '󰏗 '
[bun]
format = '[$symbol($version )]($style)'
[cmake]
format = '[$symbol($version )]($style)'
symbol = ' '
[deno]
format = '[$symbol($version )]($style)'
[elixir]
format = '[$symbol($version )]($style)'
disabled = true
[elm]
format = '[$symbol($version )]($style)'
symbol = ' '
[erlang]
format = '[$symbol($version )]($style)'
symbol = ' '
[golang]
format = '[$symbol($version )]($style)'
symbol = ' '
[haskell]
format = '[$symbol($version )]($style)'
symbol = ' '
[java]
format = '[$symbol($version )]($style)'
symbol = ' '
[kotlin]
format = '[$symbol($version )]($style)'
symbol = ' '
[lua]
format = '[$symbol($version )]($style)'
symbol = ' '
[meson]
format = '[$symbol($version )]($style)'
[nim]
format = '[$symbol($version )]($style)'
[nix_shell]
format = '[$symbol($version )]($style)'
[nodejs]
format = '[$symbol($version )]($style)'
symbol = ' '
[perl]
format = '[$symbol($version )]($style)'
symbol = ' '
[php]
format = '[$symbol($version )]($style)'
symbol = ' '
[python]
format = '[$symbol($version )]($style)'
symbol = ' '
[ruby]
format = '[$symbol($version )]($style)'
symbol = ' '
[rust]
format = '[$symbol($version )]($style)'
symbol  = ' '
[vagrant]
format = '[$symbol($version )]($style)'
[vlang]
format = '[$symbol($version )]($style)'
[zig]
format = '[$symbol($version )]($style)'
