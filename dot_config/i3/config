# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $hype Mod4+Mod1+Ctrl+Shift

set $fish exec --no-startup-id fish -ic
set $sh exec --no-startup-id sh -c
set $exec exec
set $term exec $TERMINAL
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Update keyboard layout on i3bar
set $update_keylayout exec --no-startup-id pkill -SIGRTMIN+12 i3blocks
set $update_volume exec --no-startup-id pkill -SIGRTMIN+11 i3blocks

# popups
popup_during_fullscreen leave_fullscreen

# start a terminal
bindsym $mod+Return $exec "~/.scripts/i3-term-in-current-dir.sh --tmux"
bindsym $mod+Ctrl+Return $exec "~/.scripts/i3-term-in-current-dir.sh --project"
bindsym $mod+Shift+Return $exec "~/.scripts/i3-term-in-current-dir.sh --force-new"

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+colon $exec "dmenu_run -l 20 -p open"

bindsym $mod+o $exec "rofi -show combi"
bindsym $mod+colon $exec "rofi -show run"
bindsym $mod+semicolon $exec "rofi -show run"
bindsym $mod+Ctrl+colon $exec "rofi -show drun"

bindsym $mod+Shift+colon $exec "~/.scripts/i3-dmenu-start-at-new-workspace.sh"
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
bindsym $mod+d exec "dunstctl context"

# change focus
set $focus exec --no-startup-id i3-focus
bindsym $mod+h $focus left
bindsym $mod+j $focus down
bindsym $mod+k $focus up
bindsym $mod+l $focus right
# just in case if for some reason i3-focus.py is not working
bindsym $hype+h focus left
bindsym $hype+j focus down
bindsym $hype+k focus up
bindsym $hype+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left $focus left
bindsym $mod+Down $focus down
bindsym $mod+Up $focus up
bindsym $mod+Right $focus right

# move focused window
bindsym $mod+Shift+H move left
bindsym $mod+Shift+J move down
bindsym $mod+Shift+K move up
bindsym $mod+Shift+L move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation - who the fuck made it other way around?
# bindsym $mod+v split v

# split in vertical orientation - who the fuck made it other way around?
# bindsym $mod+s split h

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
bindsym $mod+Shift+F fullscreen toggle global

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+o layout stacking
# tabbed layout
# bindsym $mod+t layout tabbed
# normal laoyout and toggle
# bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle
bindsym $mod+Ctrl+space sticky toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# switch to workspace
bindsym $mod+1 workspace --no-auto-back-and-forth $wsbrowser
bindsym $mod+2 workspace --no-auto-back-and-forth $wsterm
bindsym $mod+3 workspace --no-auto-back-and-forth $wscomm
bindsym $mod+4 workspace --no-auto-back-and-forth $wscode
bindsym $mod+5 workspace --no-auto-back-and-forth $wsmedia
bindsym $mod+6 workspace --no-auto-back-and-forth $wsqbwork
bindsym $mod+7 workspace --no-auto-back-and-forth 7
bindsym $mod+8 workspace --no-auto-back-and-forth 8
bindsym $mod+9 workspace --no-auto-back-and-forth 9
bindsym $mod+0 workspace --no-auto-back-and-forth 10

# move focused container to workspace and switch workspace
bindsym $mod+Shift+1 move container to workspace 1; workspace 1
bindsym $mod+Shift+2 move container to workspace 2; workspace 2
bindsym $mod+Shift+3 move container to workspace 3; workspace 3
bindsym $mod+Shift+4 move container to workspace 4; workspace 4
bindsym $mod+Shift+5 move container to workspace 5; workspace 5
bindsym $mod+Shift+6 move container to workspace 6; workspace 6
bindsym $mod+Shift+7 move container to workspace 7; workspace 7
bindsym $mod+Shift+8 move container to workspace 8; workspace 8
bindsym $mod+Shift+9 move container to workspace 9; workspace 9
bindsym $mod+Shift+0 move container to workspace 10; workspace 10

# move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace 1
bindsym $mod+Ctrl+2 move container to workspace 2
bindsym $mod+Ctrl+3 move container to workspace 3
bindsym $mod+Ctrl+4 move container to workspace 4
bindsym $mod+Ctrl+5 move container to workspace 5
bindsym $mod+Ctrl+6 move container to workspace 6
bindsym $mod+Ctrl+7 move container to workspace 7
bindsym $mod+Ctrl+8 move container to workspace 8
bindsym $mod+Ctrl+9 move container to workspace 9
bindsym $mod+Ctrl+0 move container to workspace 10

# named workspaces
set $wsbrowser 0:1  browser
set $wsterm    0:2  term
set $wscomm    0:3 / comm
set $wscode    0:4  code
set $wsmedia   0:5  media
set $wsqbwork  0:6  qbwork
set $wsdb      0: db
set $wsdash    0: dash
set $wsrss     0: rss
set $wsvm      0: VM
set $wssteam   0: steam
set $wsgame    0: gaming
set $ws3d      0: 3d

workspace_auto_back_and_forth yes

# reload the configuration file
# bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+R restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+E exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
set $mode_resize Resize (h) shrink width, (l) grow width, (j) shrink height, (k) grow height, (Esc) done
mode "$mode_resize" {
        bindsym Mod1+h resize shrink width 1 px
        bindsym Mod1+k resize grow height 1 px
        bindsym Mod1+j resize shrink height 1 px
        bindsym Mod1+l resize grow width 1 px

        bindsym Shift+h resize shrink width 50 px
        bindsym Shift+k resize grow height 50 px
        bindsym Shift+j resize shrink height 50 px
        bindsym Shift+l resize grow width 50 px

        bindsym h resize shrink width 100 px
        bindsym k resize grow height 100 px
        bindsym j resize shrink height 100 px
        bindsym l resize grow width 100 px

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+r mode "$mode_resize"

# screen lock with delay after, so suspend / hibernate with locked screen
set $Locker ~/.scripts/i3-lock.sh && sleep 1
set $mode_system System (l) lock, (w) switch, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (p) suspend w/o lock, (Shift+s) shutdown, (b) backup and shutdown, (Esc) cancel
mode "$mode_system" {

    # lock screen, then go back to default mode
    bindsym l exec --no-startup-id $Locker, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $Locker && systemctl suspend -i, mode "default"
    bindsym h exec --no-startup-id $Locker && systemctl hibernate -i, mode "default"
    bindsym w exec --no-startup-id dm-tool switch-to-greeter, mode "default"
    bindsym p exec --no-startup-id suspend, mode "default"
    bindsym r exec --no-startup-id reboot, mode "default"
    bindsym b $exec "backintime backup & sleep 5s; backintime shutdown", mode "default"
    bindsym Shift+s exec --no-startup-id poweroff, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+q mode "$mode_system"

exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# class                 border  backgr. text    indicator child_border
client.focused          #4c7899 #285577 #ffffff #2e9ef4   #285577
client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #ffffff

# new_window pixel 1
# new_window pixel 1
# new_window pixel
# default_border normal 1
default_border pixel 1
hide_edge_borders both


# stacked by default
# workspace_layout tabbed
workspace_layout stacking

set $display_left DisplayPort-1
set $display_right HDMI-A-0
set $display_main DisplayPort-0

# assign workspace to display
workspace "$wscomm" output $display_right
workspace "$wsmedia" output $display_left
workspace "$wsbrowser" output $display_main
workspace "$wsgame" output $display_main
workspace "$wssteam" output $display_right
workspace "$wsqbwork" output $display_right
workspace "$ws3d" output $display_right
workspace "$wscode" output $display_main

# assign apps to specific workspaces
assign [title="^DBeaver" class="^SWT$"] $wsdb
assign [title="^Dbeaver$"] $wsdb
assign [title="^toggl$"] $wsdash
assign [title="^todoist$"] $wsdash
assign [title="^jira$"] $wsdash
assign [title="^Ferdium"] $wscomm
assign [class="^discord$"] $wscomm
assign [title="Freezer"] $wsmedia

for_window [class="^discord$"] workspace --no-auto-back-and-forth $wscomm
for_window [title="^Ferdium"] workspace --no-auto-back-and-forth $wscomm

for_window [title="^.*$"] $exec sort-workspace.sh

for_window [class="Toggl Desktop"] floating enable
for_window [class="^Yad$"] floating enable
# for_window [class="Skype"] floating enable
for_window [class="explorer.exe"] floating enable
for_window [class="krusader"] floating disable
for_window [class="^feh$"] fullscreen enable
for_window [title="SPLASH_SCREEN"] floating enable
for_window [title="SPLASH_SCREEN"] fullscreen disable
for_window [title="SPLASH_SCREEN"] title_format "<span alpha='1'>%title</span>"
for_window [title="SPLASH_SCREEN"] border pixel 1

# fake-outputs 3288x1080+0+0
$exec "setxkbmap pl"
$exec "~/.scripts/i3-startup.sh"
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

bindsym Mod1+Shift+Ctrl+space exec --no-startup-id ~/.scripts/i3-keyboard-layout-toggle.sh; $update_keylayout

set $pressSound play ~/Media/test-44100Hz-le-1ch-4bytes.wav speed 2.0 vol 0.15
set $releaseSound play ~/Media/test-44100Hz-le-1ch-4bytes.wav speed 3.0 vol 0.15

# Media Keys
bindsym XF86MonBrightnessUp $exec "/usr/bin/kill -SIGRTMIN+1 $(pgrep -f 'bash .*/polybar/backlight.sh')"
bindsym XF86MonBrightnessDown $exec "/usr/bin/kill -SIGRTMIN+2 $(pgrep -f 'bash .*/polybar/backlight.sh')"
bindsym Shift+XF86AudioRaiseVolume $exec "~/.scripts/volume.sh up 'Arctis Pro'"
bindsym Shift+XF86AudioLowerVolume $exec "~/.scripts/volume.sh down 'Arctis Pro'"
bindsym XF86AudioRaiseVolume $exec "~/.scripts/volume.sh up ', Default$'"
bindsym XF86AudioLowerVolume $exec "~/.scripts/volume.sh down ', Default$'"
bindsym XF86AudioPause $exec "~/.scripts/playerctl.sh play-pause"
bindsym XF86AudioPlay $exec "~/.scripts/playerctl.sh play-pause"
bindsym Ctrl+XF86AudioPlay $exec "~/.scripts/audio.sh --next --without 'Arctis Pro'"
bindsym XF86AudioNext $exec "~/.scripts/playerctl.sh next"
bindsym XF86AudioPrev $exec "~/.scripts/playerctl.sh previous"

bindsym $hype+u $exec "~/.scripts/mousescreenlock.sh unlock"
bindsym $hype+y $exec "~/.scripts/mousescreenlock.sh"
bindsym $hype+n $exec "~/.scripts/playerctl.sh next-player"
bindsym $mod+XF86AudioRaiseVolume $exec "~/.scripts/playerctl.sh next-player"
bindsym $mod+XF86AudioLowerVolume $exec "~/.scripts/playerctl.sh prev-player"

bindsym $mod+n $exec "~/.scripts/i3-switch-workspace.py --next --same-output"
bindsym $mod+p $exec "~/.scripts/i3-switch-workspace.py --prev --same-output"
bindsym $mod+Tab workspace back_and_forth
bindsym $mod+Shift+N $exec "~/.scripts/i3-switch-workspace.py --next --same-output --with-container"
bindsym $mod+Shift+P $exec "~/.scripts/i3-switch-workspace.py --prev --same-output --with-container"

bindsym $mod+c $exec "~/.scripts/i3-create-empty-workspace.py"
bindsym $mod+Shift+C $exec "~/.scripts/i3-create-empty-workspace.py --move"
bindsym $mod+Shift+X $exec "~/.scripts/i3-create-empty-workspace.py --send"
bindsym $mod+w $exec "~/.scripts/i3-dmenu-workspaces.sh"
bindsym $mod+Shift+W $exec "~/.scripts/i3-dmenu-workspaces.sh --move"
# bindsym $mod+Ctrl+w $exec "~/.scripts/i3-dmenu-workspaces.sh --send"
bindsym $mod+Ctrl+w $exec "~/.scripts/sort-workspace.sh --extended"

bindsym --release $mod+v $sh 'xdotool keyup Super && xdotool type "$(xsel)"'
bindsym $mod+Ctrl+i $sh '~/.scripts/vim-anywhere.sh --selection'
# bindsym $mod+i $sh '~/.scripts/vim-anywhere.sh'
# bindsym $mod+Ctrl+d $sh '~/.scripts/vim-anywhere.sh --draft'
# bindsym $mod+u $sh '~/.scripts/users.sh --switch'
bindsym $mod+u $exec "~/.scripts/i3-screen-ring.sh --move-win --prev"
bindsym $mod+i $exec "~/.scripts/i3-screen-ring.sh --move-win --next"

bindsym $mod+Ctrl+f $exec "~/.scripts/switch-or-launch.sh '^Ferdium -' 'org.ferdium.Ferdium'"
bindsym $mod+Ctrl+b $exec "~/.scripts/dmenu-bluetooth"
bindsym $mod+Ctrl+n $exec "~/.scripts/networkmanager_dmenu"
bindsym $mod+Ctrl+r $exec "~/.scripts/switch-or-launch.sh '^NewsFlash$' 'newsflash'"

bindsym $mod+Ctrl+p $exec "~/.scripts/switch-or-launch.sh --scratchpad 'Deezer$' 'deezer'"
bindsym $mod+Ctrl+s $exec "~/.scripts/switch-or-launch.sh --scratchpad '^Volume Control$' 'pavucontrol'"
bindsym $mod+Ctrl+k $term -t FLOATING_WINDOW -e khal interactive
bindsym $mod+Ctrl+d $exec "~/.scripts/switch-or-launch.sh '^discord.discord$' 'discord.sh'"
bindsym $mod+Ctrl+t $exec "~/.scripts/todo.sh"
bindsym $mod+Ctrl+e $exec "~/.scripts/switch-or-launch.sh '^EMAIL_MUTT$' 'email'"
bindsym $mod+Ctrl+l $term -e ~/.scripts/dev-log

bindsym $mod+b $exec "~/.scripts/switch-or-launch.sh '^qutebrowser.qutebrowser$' 'browser'"
bindsym $mod+Ctrl+c workspace $wscode
bindsym $mod+m focus output $display_left
bindsym $mod+comma focus output $display_main
bindsym $mod+period focus output $display_right
bindsym $mod+Ctrl+m move workspace to output $display_left
bindsym $mod+Ctrl+comma move workspace to output $display_main
bindsym $mod+Ctrl+period move workspace to output $display_right
bindsym $mod+Shift+m move to output $display_left; focus output $display_left
bindsym $mod+Shift+comma move to output $display_main; focus output $display_main
bindsym $mod+Shift+period move to output $display_right; focus output $display_right
bindsym $mod+apostrophe $exec "~/.scripts/i3-dmenu-copyq.sh"
# browser shortcut
bindsym $mod+slash $exec "~/.scripts/quickbrowser.sh"
# screen shots
# full screen (image magick required)
bindsym Print $exec "import -window $(xdotool getwindowfocus -f) ~/Pictures/screenshots/screenshot_from_$(date +%Y-%m-%d_%H-%M-%S).png"
bindsym $mod+Print $exec "import -window root ~/Pictures/screenshots/screenshot_from_$(date +%Y-%m-%d_%H-%M-%S).png"
# area (maim and slop required)
bindsym Shift+Print $exec "maim -s ~/Pictures/screenshots/screenshot_from_$(date +%Y-%m-%d_%H-%M-%S).png"
#bindsym Shift+Ctrl+Print $exec "~/.scripts/record.sh ~/Videos/Capture_from_$(date +%Y-%m-%d_%H-%M-%S).mp4"
#bindsym Ctrl+Print $exec "killall ffmpeg; notify-send 'Recording has been stoped'"


bindsym Ctrl+Print $exec "shadowplay.sh --screen-shot"
bindsym Shift+Ctrl+Print $exec "shadowplay.sh --save"

for_window [class="^looking.*"] move scratchpad
bindsym $mod+g scratchpad show
bindsym $mod+Shift+G move scratchpad


# bindsym --whole-window buttor4 focus output up
# bindsym --whole-window buttor5 focus output right
# bindsym --whole-window $mod+button4 focus output up
# bindsym --whole-window $mod+button5 focus output right
bindsym --whole-window $mod+button4 $exec "i3-screen-ring.sh --focus --next"
bindsym --whole-window $mod+button5 $exec "i3-screen-ring.sh --focus --prev"
# move out of game window
# bindsym --whole-window $mod+ctrl+p $exec "xdotool mousemove 2880 1620"
